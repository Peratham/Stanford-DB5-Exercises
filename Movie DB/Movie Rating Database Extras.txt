database text type: SQLLITE
database name:movie_rating.db

Q1) Find the names of all reviewers who rated Gone with the Wind. 

Ans) SELECT DISTINCT name
FROM (Reviewer NATURAL JOIN Rating) X NATURAL JOIN Movie
WHERE title = "Gone with the Wind";

Q2) For any rating where the reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars.

Ans) SELECT name, title, stars
FROM ((Reviewer NATURAL JOIN Rating) X NATURAL JOIN Movie)
WHERE director = name;

Q3) Return all reviewer names and movie names together in a single list, alphabetized. (Sorting by the first name of the reviewer and first word in the title is fine; no need for special processing on last names or removing "The".) 

Ans) SELECT title FROM Movie
UNION
SELECT name FROM Reviewer;

Q4) Find the titles of all movies not reviewed by Chris Jackson. 

Ans) SELECT DISTINCT title
FROM Movie
WHERE mID NOT IN 
(SELECT mID 
FROM (Reviewer NATURAL JOIN Rating) 
WHERE name = "Chris Jackson");

Q5) For all pairs of reviewers such that both reviewers gave a rating to the same movie, return the names of both reviewers. Eliminate duplicates, don't pair reviewers with themselves, and include each pair only once. For each pair, return the names in the pair in alphabetical order. 

Ans) SELECT DISTINCT R1.name, R2.name
FROM 
(Reviewer NATURAL JOIN Rating) R1, (Reviewer NATURAL JOIN Rating) R2
WHERE R1.mID = R2.mID AND R1.name < R2.name
ORDER BY R1.name, R2.name;

Q6) For each rating that is the lowest (fewest stars) currently in the database, return the reviewer name, movie title, and number of stars. 

Ans) SELECT name, title, stars
FROM Movie, Reviewer, Rating
WHERE Movie.mID=Rating.mID AND Reviewer.rID = Rating.rID
AND Rating.stars=
(SELECT MIN(stars)
FROM Rating);

Q7) List movie titles and average ratings, from highest-rated to lowest-rated. If two or more movies have the same average rating, list them in alphabetical order. 

Ans) SELECT title, AVG(stars)
FROM Movie INNER JOIN Rating ON Movie.mID=Rating.mID
GROUP BY Movie.mID
ORDER BY AVG(stars) DESC, title;

Q8) Find the names of all reviewers who have contributed three or more ratings. (As an extra challenge, try writing the query without HAVING or without COUNT.) 

Ans) SELECT name
FROM Reviewer NATURAL JOIN Rating
GROUP BY name
HAVING COUNT(name)>=3;

Q9) Some directors directed more than one movie. For all such directors, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title. (As an extra challenge, try writing the query both with and without COUNT.) 

Ans) Without count:

select M1.title, M1.director
from Movie M1, Movie M2
where M1.director = M2.director and M1.title <> M2.title
order by M1.director, M1.title;

With count:

select Movie.title, Movie.director
from Movie, (
  select director, count(mID) as num
  from Movie
  group by director
) as MovieCount
where Movie.director = MovieCount.director
and num >= 2
order by Movie.director, Movie.title;

Q10) Find the movie(s) with the highest average rating. Return the movie title(s) and average rating.

Ans) select title, group_avg
from Movie, (
  select max(group_avg) as max_avg
  from Movie, (
    select Movie.mID, avg(stars) as group_avg
    from Rating, Movie
    where Rating.mID = Movie.mID
    group by Rating.mID
  ) as GroupRating
  where GroupRating.mID = Movie.mID
) as MaxRating,
(
  select Movie.mID, avg(stars) as group_avg
  from Rating, Movie
  where Rating.mID = Movie.mID
  group by Rating.mID
) as GroupRating
where GroupRating.group_avg = MaxRating.max_avg
and Movie.mID = GroupRating.mID;

Q11) Find the movie(s) with the lowest average rating. Return the movie title(s) and average rating.

Ans) select title, group_avg
from Movie, (
  select min(group_avg) as min_avg
  from Movie, (
    select Movie.mID, avg(stars) as group_avg
    from Rating, Movie
    where Rating.mID = Movie.mID
    group by Rating.mID
  ) as GroupRating
  where GroupRating.mID = Movie.mID
) as minRating,
(
  select Movie.mID, avg(stars) as group_avg
  from Rating, Movie
  where Rating.mID = Movie.mID
  group by Rating.mID
) as GroupRating
where GroupRating.group_avg = minRating.min_avg
and Movie.mID = GroupRating.mID;

Q12) For each director, return the director's name together with the title(s) of the movie(s) they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL. 

Ans) select title, max(stars) as max_star, director
from Movie, Rating
where Movie.mID = Rating.mID and director is not NULL
group by director;